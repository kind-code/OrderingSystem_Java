<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.order.mapper.OrderMapper">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status,
                            amount, remark, phone, address, consignee, estimated_delivery_time, delivery_status,
                            pack_amount, tableware_number, tableware_status)
        VALUES (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus},
                #{amount}, #{remark}, #{phone}, #{address}, #{consignee}, #{estimatedDeliveryTime},
                #{deliveryStatus}, #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>
    <update id="update">
        update orders <set>
        <if test="payStatus!=null">pay_status = #{payStatus},</if>
        <if test="status!=null">status = #{status},</if>
        <if test="cancelReason!=null">cancel_reason = #{cancelReason},</if>
        <if test="cancelTime!=null">cancel_time = #{cancelTime},</if>
    </set>
        where id = #{id}
    </update>


    <select id="conditionSearch" resultType="com.entity.Orders">
        select * from orders
        <where>
            <if test="number!=null"> number = #{number}</if>
            <if test="phone!=null">and phone = #{phone}</if>
            <if test="status!=null">and status = #{status}</if>
            <if test="beginTime!=null and endTime!=null">and order_time between #{beginTime} and #{endTime} </if>
        </where>
    </select>
    <select id="queryById" resultType="com.entity.Orders">
        select * from orders <where>
        user_id = #{id}
        <if test="status!=null">
            and status = #{status}
        </if>
    </where>
    </select>
    <select id="countByMap" resultType="java.lang.Integer">
        select count(*) from orders <where>
        <if test="begin!=null">
            order_time &gt; #{begin}
        </if>
        <if test="end!=null">
            and  order_time &lt; #{end}
        </if>
        <if test="status!=null">
            and  status = #{status}
        </if>
    </where>
    </select>

    <select id="sumByMap" resultType="java.lang.Double">
        select sum(amount) from orders <where>
        <if test="begin!=null">
            order_time &gt; #{begin}
        </if>
        <if test="end!=null">
            and  order_time &lt; #{end}
        </if>
        <if test="status!=null">
            and  status = #{status}
        </if>
    </where>
    </select>

    <select id="getSaleTop" resultType="com.dto.GoodsSalesDTO">
        select name, sum(number) as number from order_detail where order_id in(
        select id from orders
        <where>
            <if test="begin!=null">
                order_time &gt; #{begin}
            </if>
            <if test="end!=null">
                and order_time &lt; #{end}
            </if>and status = 5

        </where>)
        group by name
        order by number desc
        limit 0, 10
    </select>
</mapper>